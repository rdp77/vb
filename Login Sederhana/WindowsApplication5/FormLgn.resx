<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/gIAofICBO0qGmDAAj7koAI21IACQvhkAj7gTAI++DgCR
        wAkAkMAGAJ3dAwCe1wEAptUAAJfuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AACe7gAApPAAAKHvAgCS
        ywUAksQJAJHEDQCPuhIAkcEYAI63IACPuScAjrcvAI2xOgCPuDCIf31Gn3112ot/fO4wh53mFomm4BOK
        qNgQiqjPDYqrxgqLq70Hi6yyBYyupwKLrpwBjLGQAIywhACMsngAjbJtAIyyYQCOtlYAjbRLAI64QgmM
        rzo3h54ybIKKJoCAgBGAgIAQgICAJYCAgDF7gYI5VYWUQRyKpksCjbNVAI2zYACNsmwCjLF3BYutgwiM
        ro8Li6ubDourphKKqbEWiqe8GYmmxR6Jo84iiaPXJoig3yuIn+UtiJ7tDIuq4wCOtF2ab1gB9XVTcvh1
        VfnIemb/eYGC/2+Chv9rgof/Z4KJ/2KDiv9eg4z/WISO/1OEkP9NhZL/R4WU/0GGl/88hpj/PIaY/0CG
        l/9JhZP3UYSR4lWEj71jg4yIeYOETYSEgBh/f4AVgIGASYiAfYSefXS5q3xw4KZ9c/aVfnn+gICA/2yC
        h/9fg4z/WoON/1uDjf9gg4v/ZYKK/2qCiP9ugob/coGF/3WBhP94gYP/eoGC/32Agf9ShJD+DYurigCU
        xQb/cksA/3FIDP90UKL9dVP/u3tr/4GAgP+BgID/gYB//4KAf/+CgH//goB//4KAf/+Hf37/kn56/6F9
        dPu0e23nx3llw9h3XpPndlhg83hTMdJwWhRvZnkqbWt8YXFvfYV2dX58cnF8SU5FcSGaQVIa+nVKLv90
        TFv/c06Q/3RQwPp1VOTsdln513hh/757av+lfXP/kX56/4WAfv+AgID/gYCA/4GAgP+AgID/goB//2iC
        if8biqW4AI+6FgCOtAAAAAAA/3NOAP9yTCP/dFHM9HZX/6R9c/9/gIH/gICA/4CAgP+AgID/hYB++K97
        buDKeWS63XdciO91VFX+ckoq/246Df90AAEiP4EIKS52H3+BgS+cnoVJeHh/XktGd39PSnjAZ2R87nBv
        fd5AO3W3DAdtawAAahEAAP8A/3FGDP9ySyf/c01R/3RPhP90Ubb6dVTe7XZZ9tp4YP+7e2v/h39+/4CA
        gP+BgID/doGE/yyIn9wAjrU0AoutAACYzwAAAAAA/25FAP92VQD/c05H/3VS6eV3XP+Rfnr/f4CB/3uA
        gv91gYTBh399S991ViP/ajEJ/zwAAP9WCQD//8kAoKd4ANPXkh2PkIN+aWd9mH19f5WNjoKamJuEpLC0
        iY66vYxQa2h9V4aHgcqLjIL/T0t4/BUMbbkFAGkwDABzAAIAXwD/ZSYA/04AAP9vQgj/cksg/3NNRv90
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP9yTQD/cksc/3RRzPF2WP+Jf33/RIWV/2yCh/2BgID9gICA/4GAgP9tgof/F4qm2QCO
        ticAjbMAAP//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9rPQD/eV0A/3NPYv91UvnMeWX/g4B//4CAgP+AgID/gICA/3+A
        gP87hpn9AI2xcxB8iAAAkbwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/ckoA/3FJEP90Ubj2dlb/oX10/36A
        gf+AgID/goB//2ODiv8QiqnGAI+4GACOtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/aDYA/3ZUAP9z
        Tkr/dVLx2Hhh/4Z/fv+AgID/fICB/y+HnfYAjbNaAomqAACUvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/3FIAP9wRAf/dFCh+3VU/6x8cP+AgID/WISO/wmLrLAAkLsMAI+2AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/2U1AP90UQD/c042/3VS5uN3Xf+CgH//I4ii7QCNtEIAi7AAAJS7AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9vRQD/ZS0C/3RQif51U/+EgH//BIyvlwCV
        xgUAkbkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/c04A/3JKJOx2
        WdmLf33iIYmlLjGHnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/a0AAAKz/AKR8cm+EgH96nn11AIx/fAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAfYCBAHuAgg1+gIEOfoCBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAAAP///4AAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AAAAAQAAwAAAAgADAADgB4AB4AcAAOAfAAD4BwAA8B4AAPgPAAD4HgAAOB8AAPwMAgAwPwAA/AwCBjA/
        AAD+DAQGMH8AAP8EAAQw/wAA/4SAACH/AAD/hYCAIf8AAP/HAYAj/wAA/+IAgEf/AAD/8gAAR/8AAP/w
        AAAP/wAA//gAAB//AAD//AAAH/8AAP/8AAQ//wAA//4QCH//AAD//g/wf/8AAP//A8D//wAA//8BgP//
        AAD//4AB//8AAP//wAH//wAA///AA///AAD//+AH//8AAP//4Af//wAA///wD///AAD///AP//8AAP//
        +B///wAA///4H///AAD///w///8AAP///n///wAA///+f///AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>